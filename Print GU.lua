-- ‡∏£‡∏≠‡πÉ‡∏´‡πâ LocalPlayer ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
local player = game:GetService("Players").LocalPlayer
local playerGui = player:WaitForChild("PlayerGui") -- ‡∏£‡∏≠ PlayerGui ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
local playerData = game:GetService("ReplicatedStorage"):WaitForChild("Player_Data"):WaitForChild(player.Name) -- ‡∏£‡∏≠ Player_Data ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à

-- ‡πÄ‡∏ä‡πá‡∏Ñ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á GUI ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏≠‡πÄ‡∏ó‡∏°
local function setupItemCheckGUI()
    -- ‡∏•‡∏ö GUI ‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    local existingGui = playerGui:FindFirstChild("ItemCheckGui")
    if existingGui then
        existingGui:Destroy()
    end

    -- ‡∏™‡∏£‡πâ‡∏≤‡∏á GUI ‡πÉ‡∏´‡∏°‡πà
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ItemCheckGui"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = playerGui

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(0.5, 0, 0.6, 0)
    textLabel.Position = UDim2.new(0.25, 0, 0.2, 0)
    textLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.TextScaled = true
    textLabel.Font = Enum.Font.SourceSans
    textLabel.Text = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•..."
    textLabel.Parent = screenGui

    local items = {
        "Cursed Finger",
        "Dr. Megga Punk",
        "Trait Reroll",
        "Stats Key",
        "Ranger Crystal",
        "Perfect Stats Key"
    }

    local playerItems = playerData:WaitForChild("Items")

    local function updateGUI()
        local output = "---- ‡πÄ‡∏ä‡πá‡∏Ñ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏Ç‡∏≠‡∏á " .. player.Name .. " ----\n"
        for _, itemName in ipairs(items) do
            local item = playerItems:FindFirstChild(itemName)
            if item and item:FindFirstChild("Amount") then
                output = output .. itemName .. ": " .. item.Amount.Value .. "\n"
            else
                output = output .. itemName .. ": ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ Amount\n"
            end
        end
        output = output .. "-----------------------------"
        textLabel.Text = output
    end

    -- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ó‡∏∏‡∏Å 60 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    task.spawn(function()
        while true do
            updateGUI()
            task.wait(60)
        end
    end)

    -- ‡∏™‡∏£‡πâ‡∏≤‡∏á TextLabel ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤ Dr. Megga Punk
    local punkPriceLabel = Instance.new("TextLabel")
    punkPriceLabel.Size = UDim2.new(0.5, 0, 0.1, 0)
    punkPriceLabel.Position = UDim2.new(0.5, 0, 0, 0)  -- ‡∏ï‡∏±‡πâ‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏ö‡∏ô
    punkPriceLabel.AnchorPoint = Vector2.new(0.5, 0)  -- ‡πÉ‡∏ä‡πâ AnchorPoint ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á
    punkPriceLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    punkPriceLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    punkPriceLabel.TextScaled = true
    punkPriceLabel.Font = Enum.Font.SourceSans
    punkPriceLabel.Text = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤ Dr. Megga Punk..."
    punkPriceLabel.Parent = screenGui

    return punkPriceLabel
end

-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏•‡∏∞‡∏ã‡∏∑‡πâ‡∏≠ Dr. Megga Punk
local function checkAndBuyPunk(punkPriceLabel)
    local merchantGui = playerGui:WaitForChild("Merchant")
    local base = merchantGui:WaitForChild("Main"):WaitForChild("Base")
    local scroll = base:WaitForChild("Main"):WaitForChild("ScrollingFrame")
    local punk = scroll:FindFirstChild("Dr. Megga Punk")

    if not punk then
        -- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö Dr. Megga Punk ‡πÉ‡∏´‡πâ‡πÅ‡∏à‡πâ‡∏á‡πÉ‡∏ô GUI
        punkPriceLabel.Text = "‚ùå Dr. Megga Punk ‡πÑ‡∏°‡πà‡∏Ç‡∏≤‡∏¢‡πÉ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏µ‡πâ"
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö 'Dr. Megga Punk' ‡πÉ‡∏ô ScrollingFrame")
        return
    end

    local costNumbers = punk:WaitForChild("Buy"):WaitForChild("Cost"):WaitForChild("Numbers")
    local punkCostText = costNumbers.Text or ""
    local cleanedText = punkCostText:gsub("[^%d]", "")
    local punkCost = tonumber(cleanedText)

    -- ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏†‡∏≤‡∏¢‡πÉ‡∏ô GUI
    if punkCost then
        print("üí∞ ‡∏Ñ‡πà‡∏≤ Dr. Megga Punk =", punkCost)
        punkPriceLabel.Text = "üí∞ ‡∏Ñ‡πà‡∏≤ Dr. Megga Punk: " .. punkCost .. " ‡∏ö‡∏≤‡∏ó"
    else
        punkPriceLabel.Text = "üí∏ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤‡πÑ‡∏î‡πâ"
    end

    if punkCost and punkCost <= 6500 then
        print("üõí Dr. Megga Punk ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 6500, ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ã‡∏∑‡πâ‡∏≠ 4 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á...")

        local merchantRemote = ReplicatedStorage:WaitForChild("Remote"):WaitForChild("Server")
            :WaitForChild("Gameplay"):WaitForChild("Merchant")

        local args = {
            [1] = "Dr. Megga Punk",
            [2] = 1
        }

        for i = 1, 4 do
            print("üì§ ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà", i)
            merchantRemote:FireServer(unpack(args))
            task.wait(0.1)
        end
    else
        print("üí∏ Dr. Megga Punk ‡πÅ‡∏û‡∏á‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤‡πÑ‡∏î‡πâ: " .. tostring(punkCostText))
        punkPriceLabel.Text = "üí∏ Dr. Megga Punk ‡πÅ‡∏û‡∏á‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ: " .. punkCost .. " Gem"
    end
end

-- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
local punkPriceLabel = setupItemCheckGUI()
checkAndBuyPunk(punkPriceLabel)
